library(tidyverse)
library(here)
library(dplyr)
library(readxl)
here::here()
read_excel(here("raw_data/seabirds.xls"), sheet = ""Bird data by record ID"")
read_excel(here("raw_data/seabirds.xls"), sheet = "Bird data by record ID")
read_excel(here("task3/raw_data/seabirds.xls"), sheet = "Ship data by record ID")
read_excel(here("raw_data/seabirds.xls"), sheet = "Ship data by record ID")
bird_data_ID %>% summarise(across(.fns = ~sum(is.na(.x))))
bird_data_record_id <- read_excel(here("raw_data/seabirds.xls"), sheet = "Bird data by record ID")
bird_data_record_id <- read_excel(here("raw_data/seabirds.xls"), sheet = "Bird data by record ID")
ship_data_record_id <- read_excel(here("raw_data/seabirds.xls"), sheet = "Ship data by record ID")
library(janitor)
bird_data_record_id %>%
select(record, record_id, species_common_name_taxon_age_sex_plumage_phase, species_scientific_name_taxon_age_sex_plumage_phase) %>%
clean_names() %>%
rename(
common_name = species_common_name_taxon_age_sex_plumage_phase,
scientific_name = species_scientific_name_taxon_age_sex_plumage_phase)
View(bird_data_record_id)
bird_data_record_id %>%
clean_names() %>%
select(record, record_id, species_common_name_taxon_age_sex_plumage_phase, species_scientific_name_taxon_age_sex_plumage_phase) %>%
rename(
common_name = species_common_name_taxon_age_sex_plumage_phase,
scientific_name = species_scientific_name_taxon_age_sex_plumage_phase)
ship_data_record_id %>%
clean_names() %>%
select(record, record_id, lat) %>%
ship_data_record_id %>%
clean_names() %>%
select(record, record_id, lat)
clean_ship_data_record_id <- ship_data_record_id%>%
clean_names() %>%
select(record, record_id, lat)
clean_bird_data_record_id <- bird_data_record_id %>%
clean_names() %>%
select(record, record_id, species_common_name_taxon_age_sex_plumage_phase, species_scientific_name_taxon_age_sex_plumage_phase) %>%
rename(
common_name = species_common_name_taxon_age_sex_plumage_phase,
scientific_name = species_scientific_name_taxon_age_sex_plumage_phase)
left_join(bird_data_id_renamed, ship_data, by = "record_id")
left_join(clean_bird_data_record_id, clean_ship_data_record_id, by = "record_id")
#loading the necessary packages
library(tidyverse)
library(janitor)
library(readxl)
#loading the data
ship_data <- read_excel("../Desktop/Codeclan/portfolio/portfolio/dirty_data_project/task_3/raw_data/seabirds.xls", sheet = "Ship data by record ID") %>%
clean_names()
bird_data <- read_excel("../../dirty_data_project/task_3/raw_data/seabirds.xls", sheet = "Bird data by record ID") %>%
clean_names()
#loading the necessary packages
library(tidyverse)
library(janitor)
library(readxl)
#loading the data
ship_data <- read_excel("../../dirty_data_project/task_3/raw_data/seabirds.xls", sheet = "Ship data by record ID") %>%
clean_names()
bird_data <- read_excel("../../dirty_data_project/task_3/raw_data/seabirds.xls", sheet = "Bird data by record ID") %>%
clean_names()
## rename columns and select only necessary columns
bird_data_clean <-
bird_data %>%
rename(
common_name = species_common_name_taxon_age_sex_plumage_phase,
scientific_name = species_scientific_name_taxon_age_sex_plumage_phase,
) %>%
select(record_id, common_name, scientific_name, species_abbreviation, count)
## for cases when the bird has an entry in the age, wanplum, plphase or sex column this info appended on the common_name, scientific_name, species_abbreviation columns, and so when we do any groupings in the analysis these are picked up as different species when really they are the same bird of different ages, plumage phase or sex. We want to only hold this information in the separate info columns and remove from the name columns.
#the code to do this makes assumption that this 'extra' information held in the common_name & scientific_name column is held on the right of the name and all in capitals and numbers. For the species_abbreviation column (which is all in capitals) make assumption that the abbreviation has no spaces in it and therefore only take the information to the left hand side of the space. These assumptions were made from exploration of these columns.
bird_data_clean_species <- bird_data_clean %>%
mutate(across(common_name:scientific_name, ~str_remove(.x, "[A-Z0-9 ]+$")))  %>%
mutate(species_abbreviation = str_extract(species_abbreviation, "[A-Z]+"))
# select the necessary columns
ship_data_clean <-
ship_data %>%
select(record_id, lat, long)
# join bird and ship data
bird_ship_data <-
bird_data_clean_species %>%
left_join(ship_data_clean, by="record_id")
# write clean data to csv
write_csv(bird_ship_data, "../Desktop/Codeclan/portfolio/portfolio/dirty_data_project/task_3/clean_data/")
# write clean data to csv
write_csv(bird_ship_data, "clean_data/")
#loading the necessary packages
library(tidyverse)
library(janitor)
library(readxl)
#loading the data
ship_data <- read_excel("../../dirty_data_project/task_3/raw_data/seabirds.xls", sheet = "Ship data by record ID") %>%
clean_names()
bird_data <- read_excel("../../dirty_data_project/task_3/raw_data/seabirds.xls", sheet = "Bird data by record ID") %>%
clean_names()
## rename columns and select only necessary columns
bird_data_clean <-
bird_data %>%
rename(
common_name = species_common_name_taxon_age_sex_plumage_phase,
scientific_name = species_scientific_name_taxon_age_sex_plumage_phase,
) %>%
select(record_id, common_name, scientific_name, species_abbreviation, count)
## for cases when the bird has an entry in the age, wanplum, plphase or sex column this info appended on the common_name, scientific_name, species_abbreviation columns, and so when we do any groupings in the analysis these are picked up as different species when really they are the same bird of different ages, plumage phase or sex. We want to only hold this information in the separate info columns and remove from the name columns.
#the code to do this makes assumption that this 'extra' information held in the common_name & scientific_name column is held on the right of the name and all in capitals and numbers. For the species_abbreviation column (which is all in capitals) make assumption that the abbreviation has no spaces in it and therefore only take the information to the left hand side of the space. These assumptions were made from exploration of these columns.
bird_data_clean_species <- bird_data_clean %>%
mutate(across(common_name:scientific_name, ~str_remove(.x, "[A-Z0-9 ]+$")))  %>%
mutate(species_abbreviation = str_extract(species_abbreviation, "[A-Z]+"))
# select the necessary columns
ship_data_clean <-
ship_data %>%
select(record_id, lat, long)
# join bird and ship data
bird_ship_data <-
bird_data_clean_species %>%
left_join(ship_data_clean, by="record_id")
# write clean data to csv
write_csv(bird_ship_data, "clean_data/")
# write clean data to csv
write_csv(bird_ship_data, "data_cleaning_scripts/")
#loading the necessary packages
library(tidyverse)
library(janitor)
library(readxl)
#loading the data
ship_data <- read_excel("../../dirty_data_project/task_3/raw_data/seabirds.xls", sheet = "Ship data by record ID") %>%
clean_names()
bird_data <- read_excel("../../dirty_data_project/task_3/raw_data/seabirds.xls", sheet = "Bird data by record ID") %>%
clean_names()
## rename columns and select only necessary columns
bird_data_clean <-
bird_data %>%
rename(
common_name = species_common_name_taxon_age_sex_plumage_phase,
scientific_name = species_scientific_name_taxon_age_sex_plumage_phase,
) %>%
select(record_id, common_name, scientific_name, species_abbreviation, count)
## for cases when the bird has an entry in the age, wanplum, plphase or sex column this info appended on the common_name, scientific_name, species_abbreviation columns, and so when we do any groupings in the analysis these are picked up as different species when really they are the same bird of different ages, plumage phase or sex. We want to only hold this information in the separate info columns and remove from the name columns.
#the code to do this makes assumption that this 'extra' information held in the common_name & scientific_name column is held on the right of the name and all in capitals and numbers. For the species_abbreviation column (which is all in capitals) make assumption that the abbreviation has no spaces in it and therefore only take the information to the left hand side of the space. These assumptions were made from exploration of these columns.
bird_data_clean_species <- bird_data_clean %>%
mutate(across(common_name:scientific_name, ~str_remove(.x, "[A-Z0-9 ]+$")))  %>%
mutate(species_abbreviation = str_extract(species_abbreviation, "[A-Z]+"))
# select the necessary columns
ship_data_clean <-
ship_data %>%
select(record_id, lat, long)
# join bird and ship data
bird_ship_data <-
bird_data_clean_species %>%
left_join(ship_data_clean, by="record_id")
# write clean data to csv
write_csv(bird_ship_data, "data_cleaning_scripts/")
# write clean data to csv
write_csv(bird_ship_data, "data_cleaning_scripts/data_cleaning_script.R")
#loading the necessary packages
library(tidyverse)
library(janitor)
library(readxl)
#loading the data
ship_data <- read_excel("../../dirty_data_project/task_3/raw_data/seabirds.xls", sheet = "Ship data by record ID") %>%
clean_names()
bird_data <- read_excel("../../dirty_data_project/task_3/raw_data/seabirds.xls", sheet = "Bird data by record ID") %>%
clean_names()
## rename columns and select only necessary columns
bird_data_clean <-
bird_data %>%
rename(
common_name = species_common_name_taxon_age_sex_plumage_phase,
scientific_name = species_scientific_name_taxon_age_sex_plumage_phase,
) %>%
select(record_id, common_name, scientific_name, species_abbreviation, count)
## for cases when the bird has an entry in the age, wanplum, plphase or sex column this info appended on the common_name, scientific_name, species_abbreviation columns, and so when we do any groupings in the analysis these are picked up as different species when really they are the same bird of different ages, plumage phase or sex. We want to only hold this information in the separate info columns and remove from the name columns.
#the code to do this makes assumption that this 'extra' information held in the common_name & scientific_name column is held on the right of the name and all in capitals and numbers. For the species_abbreviation column (which is all in capitals) make assumption that the abbreviation has no spaces in it and therefore only take the information to the left hand side of the space. These assumptions were made from exploration of these columns.
bird_data_clean_species <- bird_data_clean %>%
mutate(across(common_name:scientific_name, ~str_remove(.x, "[A-Z0-9 ]+$")))  %>%
mutate(species_abbreviation = str_extract(species_abbreviation, "[A-Z]+"))
# select the necessary columns
ship_data_clean <-
ship_data %>%
select(record_id, lat, long)
# join bird and ship data
bird_ship_data <-
bird_data_clean_species %>%
left_join(ship_data_clean, by="record_id")
# write clean data to csv
write_csv(bird_ship_data, "data_cleaning_scripts/data_cleaning_script.R")
bird_data_clean_species <- bird_data_clean %>%
mutate(across(common_name:scientific_name, ~str_remove(.x, "[A-Z0-9 ]+$")))  %>%
mutate(species_abbreviation = str_extract(species_abbreviation, "[A-Z]+"))
#loading the necessary packages
library(tidyverse)
library(janitor)
library(readxl)
#loading the data
ship_data <- read_excel("../../dirty_data_project/task_3/raw_data/seabirds.xls", sheet = "Ship data by record ID") %>%
clean_names()
bird_data <- read_excel("../../dirty_data_project/task_3/raw_data/seabirds.xls", sheet = "Bird data by record ID") %>%
clean_names()
## rename columns and select only necessary columns
bird_data_clean <-
bird_data %>%
rename(
common_name = species_common_name_taxon_age_sex_plumage_phase,
scientific_name = species_scientific_name_taxon_age_sex_plumage_phase,
) %>%
select(record_id, common_name, scientific_name, species_abbreviation, count)
## for cases when the bird has an entry in the age, wanplum, plphase or sex column this info appended on the common_name, scientific_name, species_abbreviation columns, and so when we do any groupings in the analysis these are picked up as different species when really they are the same bird of different ages, plumage phase or sex. We want to only hold this information in the separate info columns and remove from the name columns.
#the code to do this makes assumption that this 'extra' information held in the common_name & scientific_name column is held on the right of the name and all in capitals and numbers. For the species_abbreviation column (which is all in capitals) make assumption that the abbreviation has no spaces in it and therefore only take the information to the left hand side of the space. These assumptions were made from exploration of these columns.
bird_data_clean_species <- bird_data_clean %>%
mutate(across(common_name:scientific_name, ~str_remove(.x, "[A-Z0-9 ]+$")))  %>%
mutate(species_abbreviation = str_extract(species_abbreviation, "[A-Z]+"))
# select the necessary columns
ship_data_clean <-
ship_data %>%
select(record_id, lat, long)
# join bird and ship data
bird_ship_data <-
bird_data_clean_species %>%
left_join(ship_data_clean, by="record_id")
# write clean data to csv
write_csv(bird_ship_data, "clean_data/")
# write clean data to csv
write_csv(bird_ship_data, "clean_data")
#loading the necessary packages
library(tidyverse)
library(janitor)
library(readxl)
#loading the data
ship_data <- read_excel("../../dirty_data_project/task_3/raw_data/seabirds.xls", sheet = "Ship data by record ID") %>%
clean_names()
bird_data <- read_excel("../../dirty_data_project/task_3/raw_data/seabirds.xls", sheet = "Bird data by record ID") %>%
clean_names()
## rename columns and select only necessary columns
bird_data_clean <-
bird_data %>%
rename(
common_name = species_common_name_taxon_age_sex_plumage_phase,
scientific_name = species_scientific_name_taxon_age_sex_plumage_phase,
) %>%
select(record_id, common_name, scientific_name, species_abbreviation, count)
## for cases when the bird has an entry in the age, wanplum, plphase or sex column this info appended on the common_name, scientific_name, species_abbreviation columns, and so when we do any groupings in the analysis these are picked up as different species when really they are the same bird of different ages, plumage phase or sex. We want to only hold this information in the separate info columns and remove from the name columns.
#the code to do this makes assumption that this 'extra' information held in the common_name & scientific_name column is held on the right of the name and all in capitals and numbers. For the species_abbreviation column (which is all in capitals) make assumption that the abbreviation has no spaces in it and therefore only take the information to the left hand side of the space. These assumptions were made from exploration of these columns.
bird_data_clean_species <- bird_data_clean %>%
mutate(across(common_name:scientific_name, ~str_remove(.x, "[A-Z0-9 ]+$")))  %>%
mutate(species_abbreviation = str_extract(species_abbreviation, "[A-Z]+"))
# select the necessary columns
ship_data_clean <-
ship_data %>%
select(record_id, lat, long)
# join bird and ship data
bird_ship_data <-
bird_data_clean_species %>%
left_join(ship_data_clean, by="record_id")
# write clean data to csv
write_csv(bird_ship_data, "clean_data")
#loading the necessary packages
library(tidyverse)
library(janitor)
library(readxl)
#loading the data
ship_data <- read_excel("../../dirty_data_project/task_3/raw_data/seabirds.xls", sheet = "Ship data by record ID") %>%
clean_names()
bird_data <- read_excel("../../dirty_data_project/task_3/raw_data/seabirds.xls", sheet = "Bird data by record ID") %>%
clean_names()
## rename columns and select only necessary columns
bird_data_clean <-
bird_data %>%
rename(
common_name = species_common_name_taxon_age_sex_plumage_phase,
scientific_name = species_scientific_name_taxon_age_sex_plumage_phase,
) %>%
select(record_id, common_name, scientific_name, species_abbreviation, count)
## for cases when the bird has an entry in the age, wanplum, plphase or sex column this info appended on the common_name, scientific_name, species_abbreviation columns, and so when we do any groupings in the analysis these are picked up as different species when really they are the same bird of different ages, plumage phase or sex. We want to only hold this information in the separate info columns and remove from the name columns.
#the code to do this makes assumption that this 'extra' information held in the common_name & scientific_name column is held on the right of the name and all in capitals and numbers. For the species_abbreviation column (which is all in capitals) make assumption that the abbreviation has no spaces in it and therefore only take the information to the left hand side of the space. These assumptions were made from exploration of these columns.
bird_data_clean_species <- bird_data_clean %>%
mutate(across(common_name:scientific_name, ~str_remove(.x, "[A-Z0-9 ]+$")))  %>%
mutate(species_abbreviation = str_extract(species_abbreviation, "[A-Z]+"))
# select the necessary columns
ship_data_clean <-
ship_data %>%
select(record_id, lat, long)
# join bird and ship data
bird_ship_data <-
bird_data_clean_species %>%
left_join(ship_data_clean, by="record_id")
# write clean data to csv
write_csv(bird_ship_data, "clean_data/bird_ship_data.csv")
library(tidyverse)
library(here)
birds <- read_csv(here("clean_data/bird_ship_data.csv"))
birds %>%
group_by(common_name, scientific_name, species_abbreviation) %>%
summarise(
count = n()
) %>%
arrange(desc(count))
birds %>%
group_by(common_name, scientific_name, species_abbreviation) %>%
summarise(
count = sum(count, na.rm = TRUE)
) %>%
arrange(desc(count))
birds %>%
group_by(common_name, scientific_name, species_abbreviation) %>%
summarise(
max_count = max(count)
) %>%
filter(max_count == 1) %>%
nrow()
birds %>%
filter(lat > -30) %>%
group_by(common_name, scientific_name, species_abbreviation) %>%
summarise(
count = sum(count, na.rm = TRUE)
) %>%
arrange(desc(count))
birds %>%
group_by(common_name, scientific_name, species_abbreviation) %>%
summarise(
max_count = max(count)
) %>%
filter(max_count == 1) %>%
nrow()
birds %>%
group_by(common_name, scientific_name, species_abbreviation) %>%
summarise(
max_count = max(count)
) %>%
filter(max_count == "1") %>%
nrow()
birds %>%
filter(str_detect(common_name, "penguin|Penguin")) %>%
summarise(
sum(count, na.rm = TRUE)
)
